<?php

namespace App\Exceptions;

use App\Service\MsgService;
use Illuminate\Foundation\Exceptions\Handler as ExceptionHandler;

use Illuminate\Validation\ValidationException;
use Symfony\Component\HttpKernel\Exception\NotFoundHttpException;
use Throwable;

class Handler extends ExceptionHandler
{
    /**
     * A list of the exception types that are not reported.
     *
     * @var array<int, class-string<Throwable>>
     */
    protected $dontReport = [
        //
    ];

    /**
     * A list of the inputs that are never flashed for validation exceptions.
     *
     * @var array<int, string>
     */
    protected $dontFlash = [
        'current_password',
        'password',
        'password_confirmation',
    ];

    /**
     * Register the exception handling callbacks for the application.
     *
     * @return void
     */
    public function register()
    {
        $this->reportable(function (Throwable $e) {
            //
        });
    }

    public function render($request, Throwable $e)
    {
        if ($e instanceof ValidationException) {
            $responseCustomize =  $this->convertValidationExceptionToResponse($e, $request);
            $arrayData = $responseCustomize->getData(true);
            $arrayData['msg'] = $arrayData['errors'];
            $arrayData['code'] = 422;
            unset($arrayData['errors']);
            echo json_encode(MsgService::msg(422, [], array_shift($arrayData['msg'])[0])) ;exit;
        }

        return parent::render($request, $e); // TODO: Change the autogenerated stub
    }

}
